---
import { getEntry, render, getCollection, type CollectionEntry } from 'astro:content'
import BaseLayout from '@/layouts/BaseLayout.astro'
import Layout from '@/components/Layout.astro'
import { ArticleLayout } from '@/components/ArticleLayout'

export async function getStaticPaths() {
  const posts: CollectionEntry<"blog">[] = await getCollection("blog")
  return posts
    .filter((post) => !post.data.draft)
    .map((post) => ({
      params: { slug: post.id.replace('.md', '') },
      props: { post },
    }))
}

// Get the slug from the incoming server request
const { slug } = Astro.params
const { post } = Astro.props

// Query for the entry directly using the request slug
const entry: CollectionEntry<"blog"> = post || await getEntry("blog", slug)

// Redirect if the entry does not exist
if (entry === undefined) {
  return Astro.redirect("/404")
}

// Render the entry to HTML in the template
const { Content } = await render(entry)
---

<BaseLayout 
  title={entry.data.title}
  description={entry.data.description}
>
  <Layout>
    <ArticleLayout article={entry.data} slug={slug} client:load>
      <Content />
    </ArticleLayout>
  </Layout>
</BaseLayout> 